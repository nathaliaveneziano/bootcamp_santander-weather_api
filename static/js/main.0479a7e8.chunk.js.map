{"version":3,"sources":["components/HelloWorld.jsx","services/api.js","App.js","reportWebVitals.js","index.js"],"names":["HelloWorld","api","axios","create","baseURL","App","useState","weather","setWeather","city","setCity","search","setSearch","event","a","preventDefault","get","response","console","log","data","useEffect","className","onSubmit","type","value","onChange","target","temperature","description","forecast","map","day","wind","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iQAQeA,I,QCNFC,E,OAAMC,EAAMC,OAAO,CAC9BC,QAAS,6C,OCyEIC,MAtEf,WACE,MAA8BC,mBAAS,MAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAwBF,mBAAS,IAAjC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAA4BJ,mBAAS,IAArC,mBAAOK,EAAP,KAAeC,EAAf,KAHa,4CAKb,WAAgCC,GAAhC,eAAAC,EAAA,6DACED,EAAME,iBADR,SAGyBd,EAAIe,IAAIL,GAHjC,OAGQM,EAHR,OAIEP,EAAQC,GAERO,QAAQC,IAAIF,EAASG,MACrBZ,EAAWS,EAASG,MAPtB,4CALa,sBAmBb,OAJAC,qBAAU,cAEP,IAGD,sBAAKC,UAAU,MAAf,UAIE,iCACE,uBAAMC,SAzBC,4CAyBP,UACE,uBACEC,KAAK,OACLC,MAAOd,EACPe,SAAU,SAACb,GAAD,OAAWD,EAAUC,EAAMc,OAAOF,UAE9C,iDAIHlB,GACC,iCACE,6BAAKE,IAEL,0BAASa,UAAU,kBAAnB,UACE,iDACA,4BAAIf,EAAQqB,cACZ,4BAAIrB,EAAQsB,iBAGd,0BAASP,UAAU,WAAnB,UACE,0CAEA,6BACGf,EAAQuB,SAASC,KAAI,SAACC,GAAD,OACpB,+BACE,gCACE,cAAC,IAAD,IACA,4BAAIA,EAAIJ,iBAGV,gCACE,cAAC,IAAD,IACA,4BAAII,EAAIC,4BCpDbC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0479a7e8.chunk.js","sourcesContent":["import React from 'react';\n\nfunction HelloWorld() {\n  return (\n      <h1>Ol√° Mundo</h1>\n  );\n}\n\nexport default HelloWorld;\n","import axios from 'axios';\n\nexport const api = axios.create({\n  baseURL: \"https://goweather.herokuapp.com/weather/\"\n})","import React, { useState, useEffect } from 'react';\nimport './App.css';\nimport HelloWorld from './components/HelloWorld';\nimport { api } from './services/api';\nimport { FaTemperatureHigh, FaWind } from 'react-icons/fa';\n\nfunction App() {\n  const [weather, setWeather] = useState(null);\n  const [city, setCity] = useState('');\n  const [search, setSearch] = useState('');\n\n  async function handleGetWeather(event) {\n    event.preventDefault();\n\n    const response = await api.get(search);\n    setCity(search);\n\n    console.log(response.data);\n    setWeather(response.data);\n  }\n\n  useEffect(() => {\n    // handleGetWeather();\n  }, []);\n\n  return (\n    <div className='App'>\n      {/* <h1>{'hello world'.toUpperCase()}</h1> */}\n      {/* <HelloWorld /> */}\n\n      <header>\n        <form onSubmit={handleGetWeather}>\n          <input\n            type='text'\n            value={search}\n            onChange={(event) => setSearch(event.target.value)}\n          />\n          <button>enviar</button>\n        </form>\n      </header>\n\n      {weather && (\n        <main>\n          <h1>{city}</h1>\n\n          <section className='current-weather'>\n            <h2>Current weather</h2>\n            <p>{weather.temperature}</p>\n            <p>{weather.description}</p>\n          </section>\n\n          <section className='forecast'>\n            <h2>Forecast</h2>\n\n            <ol>\n              {weather.forecast.map((day) => (\n                <li>\n                  <div>\n                    <FaTemperatureHigh />\n                    <p>{day.temperature}</p>\n                  </div>\n\n                  <div>\n                    <FaWind />\n                    <p>{day.wind}</p>\n                  </div>\n                </li>\n              ))}\n            </ol>\n          </section>\n        </main>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}